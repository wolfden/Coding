
#!/usr/bin/python

     #created by wolfden
     #script for cpupower to quickly set governor
     #must be root to make changes

import subprocess
import time
import sys

#Notice to run as root or changes will fail
print "\nScript for cpupower. To Makes Changes Must Be Root\n"   

#time for the menu
ans=True									   
while ans:
	print ("""
	0.Install cpupower via entropy
	1.Display Current CPU Info - CPUs current status
	2.Display CPU idle info - CPUs current idle status
	3.Set Governor to ondemand - Switch between CPU(s) available if at 95% load
	4.Set Governor to performance - Run the cpu at max frequency
	5.Set Governor to conservative - Switch between CPU(s) available if at 75% load
	6.Set Governor to powersave - Run the cpu at the minimum frequency
	7.Set Governor to userspace - Run the cpu at user specified frequencies
	8.Enable cpupower.service - Adds cpupower to boot up
	9.Start cpupower.service - Starts cpupower service
	10.Monitor CPU - Live view of CPUs, Ctrl + c to end
	11.Edit the config file - set governor on boot
	12.Exit
""")
	ans=raw_input("Enter Number From Above:")

	if ans=="0":
		print "Installing cpupower"
		install = subprocess.Popen('equo install cpupower', shell=True)
		retval = install.wait()
	elif ans=="1":
		print "CPU info"
		time.sleep(1)	
		info = subprocess.Popen('cpupower frequency-info', shell=True)
		retval = info.wait()
	elif ans=="2":
		print "Displaying CPU idle info"
		time.sleep(2)
		idleinfo = subprocess.Popen('cpupower idle-info', shell=True)
		retval = idleinfo.wait()
	elif ans=="3":
		print "Setting Governor to ondemand"
		time.sleep(1)
		ondemand = subprocess.Popen('cpupower frequency-set -g ondemand', shell=True)
		retval = ondemand.wait()
	elif ans=="4":		
		print "Setting Governor to performance"
		time.sleep(1)
		performance = subprocess.Popen('cpupower frequency-set -g performance', shell=True)
		retval = performance.wait()
	elif ans=="5":		
		print "Setting Governor to conservative"
		time.sleep(1)
		conservative = subprocess.Popen('cpupower frequency-set -g conservative', shell=True)
		retval = conservative.wait()
	elif ans=="6":
		print "Setting Governor to powersave"
		time.sleep(1)
		powersave = subprocess.Popen('cpupower frequency-set -g powersave', shell=True)
		retval = powersave.wait()
	elif ans=="7":
		print "Setting Governor to userspace"
		time.sleep(1)
		userspace = subprocess.Popen('cpupower frequency-set -g userspace', shell=True)
		retval = userspace.wait()
	elif ans=="8":
		print "Enabling cpupower.service"
		time.sleep(1)
		enable = subprocess.Popen('systemctl enable cpupower.service', shell=True)
		retval = enable.wait()
	elif ans=="9":
		print "Starting cpupower.service"
		time.sleep(1)
		start = subprocess.Popen('systemctl start cpupower.service', shell=True)
		retval = start.wait()
	elif ans=="10":
		print "Starting Live CPU monitoring"
		time.sleep(2)
		monitor = subprocess.Popen('watch grep \"cpu MHz\" /proc/cpuinfo', shell=True)
	elif ans=="11":
		print "Opening file now..	"
		p = subprocess.Popen('nano /etc/sysconfig/cpupower', shell=True)
		returncode = p.wait()	
	elif ans=="12":
		sys.exit()
	elif ans !="":
		print "Unknown Option"

